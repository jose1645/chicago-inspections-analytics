name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Cambia esto a la rakkma que desees usar para despliegue

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Ajusta según la versión que estés utilizando

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # Instala las dependencias de tu proyecto

      # Construir imagen de ingesta
      - name: Build Docker image for Ingesta
        run: |
          docker build -t my-dataproject-ingesta -f Dockerfile.ingesta .

      # Construir imagen de modelo
      - name: Build Docker image for Model
        run: |
          docker build -t my-dataproject-model -f Dockerfile.model .

      # Construir imagen de webapp
      - name: Build Docker image for Webapp
        run: |
          docker build -t my-dataproject-webapp -f Dockerfile.webapp .

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login --username synteck428 --password-stdin

      # Etiquetar y subir la imagen de ingesta
      - name: Tag and push Ingesta Docker image
        run: |
          docker tag my-dataproject-ingesta:latest synteck428/my-dataproject-ingesta:latest
          docker push synteck428/my-dataproject-ingesta:latest

      # Etiquetar y subir la imagen de modelo
      - name: Tag and push Model Docker image
        run: |
          docker tag my-dataproject-model:latest synteck428/my-dataproject-model:latest
          docker push synteck428/my-dataproject-model:latest

      # Etiquetar y subir la imagen de webappjjj
      - name: Tag and push Webapp Docker image
        run: |
          docker tag my-dataproject-webapp:latest synteck428/my-dataproject-webapp:latest
          docker push synteck428/my-dataproject-webapp:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Decode SSH Key
        run: echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > key.pem

      - name: Copy files and start applications on EC2
        run: |
          chmod 400 key.pem  # Asegúrate de que la clave tiene los permisos correctos
          scp -i key.pem -o StrictHostKeyChecking=no -r ./ my-username@your-ec2-public-ip:/path/to/deployment/directory
          ssh -i key.pem -o StrictHostKeyChecking=no my-username@your-ec2-public-ip "
            docker pull synteck428/my-dataproject-ingesta:latest &&
            docker pull synteck428/my-dataproject-model:latest &&
            docker pull synteck428/my-dataproject-webapp:latest &&
            docker run -d -p 8080:80 synteck428/my-dataproject-webapp:latest && 
            docker run -d synteck428/my-dataproject-ingesta:latest && 
            docker run -d synteck428/my-dataproject-model:latest
          "
